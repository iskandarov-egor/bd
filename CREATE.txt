CREATE TABLE user (
	id INT AUTO_INCREMENT NOT NULL,
	username VARCHAR(255),
	`about` TEXT,
	name VARCHAR(33),
	email VARCHAR(255) UNIQUE NOT NULL,
	isAnonymous BOOLEAN DEFAULT FALSE,
	PRIMARY KEY(id)
);

CREATE TABLE following (
    follower_id  INT NOT NULL,
    followee_id INT NOT NULL,
    FOREIGN KEY (follower_id) REFERENCES user(id) ON DELETE CASCADE,
    FOREIGN KEY (followee_id) REFERENCES user(id) ON DELETE CASCADE,
    PRIMARY KEY(follower_id, followee_id)
);

CREATE TABLE forum (
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL UNIQUE,
	short_name VARCHAR(255) NOT NULL UNIQUE,
	founder_id INT,
	FOREIGN KEY(founder_id) REFERENCES user(id),
	PRIMARY KEY(id)
);

CREATE TABLE thread (
	id INT NOT NULL AUTO_INCREMENT,
	title VARCHAR(255) NOT NULL,
	slug VARCHAR(255) NOT NULL,
	creator_id INT NOT NULL,
	message TEXT NOT NULL,
	likes INT NOT NULL DEFAULT 0,
	dislikes INT NOT NULL DEFAULT 0,
	forum_id INT NOT NULL,
	date DATETIME NOT NULL,
	isClosed BOOL DEFAULT FALSE,
	isDeleted BOOL DEFAULT FALSE,
	posts INT NOT NULL DEFAULT 0,
	PRIMARY KEY(id),
	FOREIGN KEY(creator_id) REFERENCES user(id),
	FOREIGN KEY(forum_id) REFERENCES forum(id)
);

CREATE TABLE subscription (
	user_id INT NOT NULL,
	thread_id INT NOT NULL,
	PRIMARY KEY(user_id, thread_id),
	FOREIGN KEY(user_id) REFERENCES user(id),
	FOREIGN KEY(thread_id) REFERENCES thread(id)
);

CREATE TABLE post (
	id INT NOT NULL AUTO_INCREMENT,
	forum_id INT NOT NULL,
	message text NOT NULL,
	likes INT NOT NULL DEFAULT 0,
	dislikes INT NOT NULL DEFAULT 0,
	author_id INT NOT NULL,
	isApproved BOOL DEFAULT FALSE,
	isHighlighted BOOL DEFAULT FALSE,
	isDeleted BOOL DEFAULT FALSE,
	isEdited BOOL DEFAULT FALSE,
	isSpam BOOL DEFAULT FALSE,
	date DATETIME NOT NULL,
	thread_id INT NOT NULL,
	matpath VARCHAR(255),
	isRoot BOOL NOT NULL DEFAULT TRUE,
	PRIMARY KEY(id),
	FOREIGN KEY(forum_id) REFERENCES forum(id),
	FOREIGN KEY(thread_id) REFERENCES thread(id),
	FOREIGN KEY(author_id) REFERENCES user(id)
);

CREATE TABLE forum_authors (
	forum_id INT NOT NULL,
	author_id INT NOT NULL,
	FOREIGN KEY(forum_id) REFERENCES forum(id),
	FOREIGN KEY(author_id) REFERENCES user(id),
	PRIMARY KEY(forum_id, author_id)
);
